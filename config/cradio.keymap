// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#define ZMK_POINTING_DEFAULT_MOVE_VAL 1500  // default: 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 20    // default: 10

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        ht: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            require-prior-idle-ms = <100>;
            bindings = <&kp>, <&kp>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W  &kp E  &kp R      &kp T                 &kp Y            &kp U       &kp I      &kp O    &kp P
&kp A             &kp S  &kp D  &kp F      &kp G                 &kp H            &kp J       &kp K      &kp L    &kp SQT
&ht LEFT_SHIFT Z  &kp X  &kp C  &kp V      &kp B                 &kp N            &kp M       &kp COMMA  &kp DOT  &ht RIGHT_SHIFT FSLH
                                &lt 2 TAB  &ht LEFT_GUI ENTER    &ht RCTRL SPACE  &lt 1 BSPC
            >;
        };

        right_layer {
            bindings = <
&kp INS  &kp N1  &kp N2  &kp N3        &kp ESCAPE    &kp HOME      &kp PG_DN       &kp UP_ARROW    &kp END          &kp COLON
&kp DEL  &kp N4  &kp N5  &kp N6        &kp RG(V)     &trans        &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp SEMI
&kp TAB  &kp N7  &kp N8  &kp N9        &kp N0        &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2    &trans           &to 0
                         &kp LEFT_GUI  &kp ESC       &kp SPACE     &trans
            >;
        };

        left_layer {
            bindings = <
&kp ESC   &kp LBKT  &kp LBRC  &kp RBRC  &trans       &kp CARET  &kp LPAR   &kp RPAR   &kp RBKT  &kp TILDE
&kp EXCL  &kp AT    &kp HASH  &kp DLLR  &kp PRCNT    &kp ASTRK  &kp MINUS  &kp EQUAL  &kp BSLH  &kp GRAVE
&trans    &trans    &trans    &trans    &trans       &kp AMPS   &kp UNDER  &kp PLUS   &kp PIPE  &to 0
                              &trans    &trans       &trans     &trans
            >;
        };

        tri_layer {
            bindings = <
&sys_reset   &trans  &trans  &trans      &bt BT_SEL 0    &trans  &trans  &trans  &trans  &sys_reset
&bootloader  &trans  &trans  &trans      &bt BT_SEL 1    &trans  &trans  &trans  &trans  &bootloader
&trans       &trans  &trans  &bt BT_CLR  &bt BT_SEL 2    &trans  &trans  &trans  &trans  &trans
                             &trans      &trans          &trans  &trans
            >;
        };
    };
};
